.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.2.
.TH CPUFETCH "1" "June 2021" "cpufetch v0.97 (x86_64 build)" "User Commands"
.SH NAME
cpufetch \- Simple yet fancy CPU architecture fetching tool
.SH SYNOPSIS
.B cpufetch
[\fI\,OPTION\/\fR]...
.SH DESCRIPTION
Print detailed information about the CPU architecture. cpufetch displays information like the number of cores, microarchitecture, frequency, cache and peak performance. The program supports x86, x86_64 and ARM architectures and runs on GNU/Linux, Windows, Android and macOS (see https://github.com/Dr-Noob/cpufetch#1-support for more information)
.SH OPTIONS
.TP
\fB\-c\fR, \fB\-\-color\fR
Set the color scheme (by default, cpufetch uses the system color scheme)
.TP
\fB\-s\fR, \fB\-\-style\fR
Set the style of CPU art
.TP
\fB\-d\fR, \fB\-\-debug\fR
Prints CPU model and cpuid levels (debug purposes)
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Prints extra information (if available) about how cpufetch tried fetching information
.TP
\fB\-r\fR, \fB\-\-raw\fR
Prints raw cpuid data
.TP
\fB\-h\fR, \fB\-\-help\fR
Prints this help and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Prints cpufetch version and exit
.SH "COLORS:"
.TP
* "intel":
Use Intel default color scheme
.TP
* "amd":
Use AMD default color scheme
.TP
* "ibm":
Use IBM default color scheme
.TP
* "arm":
Use ARM default color scheme
.TP
* "m1":
Use M1 default color scheme
.TP
* custom:
If color argument do not match "intel", "amd", "arm" or "m1", a custom scheme can be specified.
4 colors must be given in RGB with the format: R,G,B:R,G,B:...The first 2 colors are the CPU art color and the next 2 colors are the text colors
.SH "STYLES:"
.TP
* "fancy":
Default style
.TP
* "retro":
Old cpufetch style
.TP
* "legacy":
Fallback style for terminals that do not support colors
.SH "EXAMPLES:"
Run cpufetch with Intel color scheme:
.PP
\&./cpufetch \fB\-\-color\fR intel
.PP
Run cpufetch with a custom color scheme:
.PP
\&./cpufetch \fB\-\-color\fR 239,90,45:210,200,200:100,200,45:0,200,200
.SH "BUGS:"
Report bugs to https://github.com/Dr\-Noob/cpufetch/issues
.SH "NOTE:"
Peak performance information is NOT accurate. cpufetch computes peak performance using the max frequency. However, to properly compute peak performance, you need to know the frequency of the CPU running AVX code, which is not be fetched by cpufetch since it depends on each specific CPU. For peak performance measurement see peakperf (https://github.com/Dr\-Noob/peakperf)
.SH "AUTHOR:"
Dr-Noob (https://github.com/Dr-Noob)

